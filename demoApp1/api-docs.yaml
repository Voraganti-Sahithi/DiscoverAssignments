openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8888
  description: Generated server url
paths:
  /api/employees/create:
    post:
      tags:
      - employee-controller
      summary: Create a new employee
      description: Creates a new employee with the provided details.
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeVO"
        required: true
      responses:
        "201":
          description: Employee successfully created
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: "Validation Failed: Name must be from 2 to 50 characters and\
            \ Age must be between 18 and 65"
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Unexpected error
          content:
            '*/*':
              schema:
                type: object
  /api/employees/healthCheck/{value}:
    get:
      tags:
      - employee-controller
      summary: Health check by ID
      description: Performs a health check by employee ID.
      operationId: healthCheckId
      parameters:
      - name: value
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success health check
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Health check failed
          content:
            '*/*':
              schema:
                type: string
  /api/employees/byName/{name}:
    get:
      tags:
      - employee-controller
      summary: Get employee by name
      description: Fetches employees by their name.
      operationId: getEmployeeByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved employees
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Employee not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Unexpected error
          content:
            '*/*':
              schema:
                type: object
  /api/employees/byId/{id}:
    get:
      tags:
      - employee-controller
      summary: Get employee by ID
      description: Fetches an employee by their ID.
      operationId: getEmployeeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved employee
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Employee not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Unexpected error
          content:
            '*/*':
              schema:
                type: object
  /api/employees/all:
    get:
      tags:
      - employee-controller
      summary: Get all employees
      description: Fetches all employees from the database.
      operationId: getAllEmployees
      responses:
        "200":
          description: Successfully retrieved employees
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeVO"
        "404":
          description: No employees found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeVO"
        "500":
          description: Unexpected error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeVO"
components:
  schemas:
    EmployeeVO:
      required:
      - age
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 50
          minLength: 2
          type: string
        age:
          maximum: 65
          minimum: 18
          type: integer
          format: int32
